{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\ReactProjects\\\\web-messenger\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport HomePage from './containers/HomePage';\nimport LoginPage from './containers/LoginPage';\nimport RegisterPage from './containers/RegisterPage';\nimport PrivateRoute from './components/PrivateRoute';\nimport { useDispatch, useSelector } from 'react-redux'; // only logged in user can access home router\n\nfunction App() {\n  _s();\n\n  const auth = useSelector(state => state.auth);\n  useEffect(() => {\n    if (!auth.authenticated) {\n      dispatch(isLoggedInUser());\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(PrivateRoute, {\n        path: \"/\",\n        exact: true,\n        component: HomePage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        component: LoginPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/signup\",\n        component: RegisterPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"6pHM2EadgYHYbJeQE2NboY0+quY=\", false, function () {\n  return [useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/ReactProjects/web-messenger/src/App.js"],"names":["BrowserRouter","Router","Route","HomePage","LoginPage","RegisterPage","PrivateRoute","useDispatch","useSelector","App","auth","state","useEffect","authenticated","dispatch","isLoggedInUser"],"mappings":";;;;;AAAA,OAAO,WAAP;AACA,SAAQA,aAAa,IAAIC,MAAzB,EAAgCC,KAAhC,QAA6C,kBAA7C;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC,C,CACC;;AACD,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAMC,IAAI,GAAGF,WAAW,CAACG,KAAK,IAAIA,KAAK,CAACD,IAAhB,CAAxB;AAEAE,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAG,CAACF,IAAI,CAACG,aAAT,EAAuB;AACrBC,MAAAA,QAAQ,CAACC,cAAc,EAAf,CAAR;AACD;AACF,GAJQ,EAIP,EAJO,CAAT;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE,QAAC,MAAD;AAAA,8BACC,QAAC,YAAD;AAAc,QAAA,IAAI,EAAG,GAArB;AAAyB,QAAA,KAAK,MAA9B;AAA+B,QAAA,SAAS,EAAEZ;AAA1C;AAAA;AAAA;AAAA;AAAA,cADD,eAGE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAG,QAAd;AAAuB,QAAA,SAAS,EAAIC;AAApC;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAG,SAAd;AAAwB,QAAA,SAAS,EAAKC;AAAtC;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GApBQI,G;UAEMD,W;;;KAFNC,G;AAsBT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport {BrowserRouter as Router,Route}  from 'react-router-dom';\nimport HomePage from './containers/HomePage';\nimport LoginPage from './containers/LoginPage';\nimport RegisterPage from './containers/RegisterPage';\nimport PrivateRoute from './components/PrivateRoute';\n\nimport { useDispatch, useSelector } from 'react-redux';\n // only logged in user can access home router\nfunction App() {\n\n  const auth = useSelector(state => state.auth);\n\n  useEffect(()=>{\n    if(!auth.authenticated){\n      dispatch(isLoggedInUser());\n    }\n  },[]);\n\n  return (\n    <div className=\"App\">\n      <Router>\n       <PrivateRoute path = \"/\" exact component={HomePage} />\n  \n        <Route path = \"/login\" component = {LoginPage} />\n        <Route path = \"/signup\" component  = {RegisterPage} />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}