{"ast":null,"code":"//import {firestore} from 'firebase';\n//import firebase from 'firebase';\nimport { authConstant } from './constants';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nexport const signup = user => {\n  return async dispatch => {\n    const db = firebase.firestore();\n    dispatch({\n      type: `${authConstant.USER_LOGIN}_REQUEST`\n    });\n    await firebase.auth().createUserWithEmailAndPassword(user.email, user.password).then(data => {\n      console.log(data);\n      const currentUser = firebase.auth().currentUser;\n      const name = `${user.firstName} ${user.lastName}`;\n      currentUser.updateProfile({\n        displayName: name\n      }).then(() => {\n        // update successfully\n        //console.log(\"Update profile successfully\");\n        db.collection('users').add({\n          firstName: user.firstName,\n          lastName: user.lastName,\n          uid: data.user.uid,\n          createdAt: new Date()\n        }).then(() => {\n          //successful\n          const loggedInUser = {\n            firstName: user.firstName,\n            lastName: user.lastName,\n            uid: data.user.uid,\n            email: user.email\n          };\n          localStorage.setItem('user', JSON.stringify(loggedInUser));\n          console.log('User Logged In successfull');\n          dispatch({\n            type: `${authConstant.USER_LOGIN}_SUCCESS`,\n            payload: {\n              user: loggedInUser\n            }\n          });\n        }).catch(error => {\n          console.log(error);\n          dispatch({\n            type: `${authConstant.USER_LOGIN}_FAILURE`,\n            payload: {\n              error\n            }\n          });\n        });\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n};","map":{"version":3,"sources":["E:/ReactProjects/web-messenger/src/actions/auth.actions.js"],"names":["authConstant","firebase","signup","user","dispatch","db","firestore","type","USER_LOGIN","auth","createUserWithEmailAndPassword","email","password","then","data","console","log","currentUser","name","firstName","lastName","updateProfile","displayName","collection","add","uid","createdAt","Date","loggedInUser","localStorage","setItem","JSON","stringify","payload","catch","error"],"mappings":"AAAA;AACA;AACA,SAASA,YAAT,QAA6B,aAA7B;AAEA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAO,oBAAP;AAEA,OAAO,MAAMC,MAAM,GAAIC,IAAD,IAAQ;AAC1B,SAAO,MAAOC,QAAP,IAAkB;AACrB,UAAMC,EAAE,GAAGJ,QAAQ,CAACK,SAAT,EAAX;AAEAF,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAE,GAAEP,YAAY,CAACQ,UAAW;AAAjC,KAAD,CAAR;AAEA,UAAMP,QAAQ,CAACQ,IAAT,GAAgBC,8BAAhB,CAA+CP,IAAI,CAACQ,KAApD,EAA0DR,IAAI,CAACS,QAA/D,EACLC,IADK,CACAC,IAAI,IAAG;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,YAAMG,WAAW,GAAGhB,QAAQ,CAACQ,IAAT,GAAgBQ,WAApC;AACA,YAAMC,IAAI,GAAI,GAAEf,IAAI,CAACgB,SAAU,IAAGhB,IAAI,CAACiB,QAAS,EAAhD;AACAH,MAAAA,WAAW,CAACI,aAAZ,CAA0B;AACtBC,QAAAA,WAAW,EAACJ;AADU,OAA1B,EAEGL,IAFH,CAEQ,MAAI;AACR;AACA;AACAR,QAAAA,EAAE,CAACkB,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2B;AACvBL,UAAAA,SAAS,EAAChB,IAAI,CAACgB,SADQ;AAEvBC,UAAAA,QAAQ,EAAEjB,IAAI,CAACiB,QAFQ;AAGvBK,UAAAA,GAAG,EAACX,IAAI,CAACX,IAAL,CAAUsB,GAHS;AAIvBC,UAAAA,SAAS,EAAG,IAAIC,IAAJ;AAJW,SAA3B,EAKGd,IALH,CAKQ,MAAI;AACR;AACA,gBAAMe,YAAY,GAAG;AACjBT,YAAAA,SAAS,EAAChB,IAAI,CAACgB,SADE;AAEjBC,YAAAA,QAAQ,EAAEjB,IAAI,CAACiB,QAFE;AAGjBK,YAAAA,GAAG,EAACX,IAAI,CAACX,IAAL,CAAUsB,GAHG;AAIjBd,YAAAA,KAAK,EAACR,IAAI,CAACQ;AAJM,WAArB;AAMAkB,UAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA4BC,IAAI,CAACC,SAAL,CAAeJ,YAAf,CAA5B;AACAb,UAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACAZ,UAAAA,QAAQ,CAAC;AACLG,YAAAA,IAAI,EAAG,GAAEP,YAAY,CAACQ,UAAW,UAD5B;AAELyB,YAAAA,OAAO,EAAE;AAAC9B,cAAAA,IAAI,EAACyB;AAAN;AAFJ,WAAD,CAAR;AAKH,SApBD,EAoBGM,KApBH,CAoBUC,KAAD,IAAS;AACdpB,UAAAA,OAAO,CAACC,GAAR,CAAYmB,KAAZ;AACA/B,UAAAA,QAAQ,CAAC;AACLG,YAAAA,IAAI,EAAE,GAAEP,YAAY,CAACQ,UAAW,UAD3B;AAELyB,YAAAA,OAAO,EAAE;AACLE,cAAAA;AADK;AAFJ,WAAD,CAAR;AAMH,SA5BD;AA6BH,OAlCD;AAmCH,KAxCK,EAyCLD,KAzCK,CAyCCC,KAAK,IAAG;AACXpB,MAAAA,OAAO,CAACC,GAAR,CAAYmB,KAAZ;AACH,KA3CK,CAAN;AA4CH,GAjDD;AAkDH,CAnDM","sourcesContent":["//import {firestore} from 'firebase';\r\n//import firebase from 'firebase';\r\nimport { authConstant } from './constants';\r\n\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\n\r\nexport const signup = (user)=>{\r\n    return async (dispatch)=>{\r\n        const db = firebase.firestore();\r\n\r\n        dispatch({type:`${authConstant.USER_LOGIN}_REQUEST`});\r\n\r\n        await firebase.auth().createUserWithEmailAndPassword(user.email,user.password)\r\n        .then(data =>{\r\n            console.log(data);\r\n            const currentUser = firebase.auth().currentUser;\r\n            const name = `${user.firstName} ${user.lastName}`;\r\n            currentUser.updateProfile({\r\n                displayName:name,\r\n            }).then(()=>{\r\n                // update successfully\r\n                //console.log(\"Update profile successfully\");\r\n                db.collection('users').add({\r\n                    firstName:user.firstName,\r\n                    lastName: user.lastName,\r\n                    uid:data.user.uid,\r\n                    createdAt : new Date()\r\n                }).then(()=>{\r\n                    //successful\r\n                    const loggedInUser = {\r\n                        firstName:user.firstName,\r\n                        lastName: user.lastName,\r\n                        uid:data.user.uid,\r\n                        email:user.email\r\n                    }\r\n                    localStorage.setItem('user',JSON.stringify(loggedInUser));\r\n                    console.log('User Logged In successfull');\r\n                    dispatch({\r\n                        type: `${authConstant.USER_LOGIN}_SUCCESS`,\r\n                        payload: {user:loggedInUser}\r\n                    })\r\n\r\n                }).catch((error)=>{\r\n                    console.log(error);\r\n                    dispatch({\r\n                        type:`${authConstant.USER_LOGIN}_FAILURE`,\r\n                        payload: {\r\n                            error\r\n                        }\r\n                    });\r\n                });\r\n            })\r\n        })\r\n        .catch(error =>{\r\n            console.log(error);\r\n        })\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}